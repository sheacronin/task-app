{"version":3,"sources":["i/trash.svg","i/edit.svg","i/submit.svg","components/Overview.js","App.js","index.js"],"names":["TaskItem","props","handleToggleEditable","state","isEditable","onSubmitTaskEdit","task","setState","handleChange","e","text","target","value","id","this","i","removeTask","className","onClick","src","trashIcon","alt","Component","TaskText","type","onChange","onKeyUp","key","EditButton","submitIcon","editIcon","Overview","tasks","map","App","onTaskSubmit","uniqid","preventDefault","editedTask","changingTask","find","changeIndex","indexOf","firstPartArray","slice","secondPartArray","filter","htmlFor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf348157.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/trash.4c147cdf.svg\";","export default __webpack_public_path__ + \"static/media/edit.7381f347.svg\";","export default __webpack_public_path__ + \"static/media/submit.017d8715.svg\";","import React, { Component } from 'react';\nimport trashIcon from '../i/trash.svg';\nimport editIcon from '../i/edit.svg';\nimport submitIcon from '../i/submit.svg';\n\nconst Overview = (props) => {\n    const { tasks, removeTask, onSubmitTaskEdit } = props;\n\n    return (\n        <div id=\"tasks-container\">\n            <ul>\n                {tasks.map((task, i) => (\n                    <TaskItem\n                        key={task.id}\n                        task={task}\n                        i={i}\n                        removeTask={removeTask}\n                        onSubmitTaskEdit={onSubmitTaskEdit}\n                    />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nclass TaskItem extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isEditable: false,\n            task: {\n                text: props.task.text,\n                id: props.task.id,\n            },\n        };\n    }\n\n    handleToggleEditable = () => {\n        if (this.state.isEditable) {\n            // If submitting, edit state in App\n            this.props.onSubmitTaskEdit(this.state.task);\n        }\n\n        this.setState({\n            isEditable: !this.state.isEditable,\n        });\n    };\n\n    handleChange = (e) => {\n        this.setState({\n            task: {\n                text: e.target.value,\n                id: this.state.task.id,\n            },\n        });\n    };\n\n    render() {\n        const { task, isEditable } = this.state;\n        const { i, removeTask } = this.props;\n\n        return (\n            <li>\n                <span className=\"task-num\">{i + 1}</span>\n                <TaskText\n                    isEditable={isEditable}\n                    task={task}\n                    handleChange={this.handleChange}\n                    handleToggleEditable={this.handleToggleEditable}\n                />\n                <EditButton\n                    handleToggleEditable={this.handleToggleEditable}\n                    isEditable={isEditable}\n                />\n                <button\n                    className=\"delete-task\"\n                    onClick={() => removeTask(task.id)}\n                >\n                    <img src={trashIcon} alt=\"trash can icon\" />\n                </button>\n            </li>\n        );\n    }\n}\n\nconst TaskText = (props) => {\n    const { isEditable, task, handleChange, handleToggleEditable } = props;\n\n    if (isEditable) {\n        return (\n            <input\n                type=\"text\"\n                value={task.text}\n                onChange={handleChange}\n                onKeyUp={(e) => {\n                    if (e.key === 'Enter') {\n                        handleToggleEditable();\n                    }\n                }}\n            />\n        );\n    } else {\n        return <span className=\"task-text\">{task.text}</span>;\n    }\n};\n\nconst EditButton = (props) => {\n    const { handleToggleEditable, isEditable } = props;\n\n    return (\n        <button className=\"edit-task\" onClick={handleToggleEditable}>\n            <img\n                src={isEditable ? submitIcon : editIcon}\n                alt={isEditable ? 'check mark submit icon' : 'pencil edit icon'}\n            />\n        </button>\n    );\n};\n\nexport default Overview;\n","import './App.css';\nimport React, { Component } from 'react';\nimport Overview from './components/Overview';\nimport uniqid from 'uniqid';\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            task: {\n                text: '',\n                id: uniqid(),\n            },\n            tasks: [],\n        };\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            task: {\n                text: e.target.value,\n                id: this.state.task.id,\n            },\n        });\n    };\n\n    onTaskSubmit = (e) => {\n        this.setState({\n            tasks: [...this.state.tasks, this.state.task],\n            task: {\n                text: '',\n                id: uniqid(),\n            },\n        });\n        e.preventDefault();\n    };\n\n    onSubmitTaskEdit = (editedTask) => {\n        const { tasks } = this.state;\n        const changingTask = tasks.find((task) => task.id === editedTask.id);\n        const changeIndex = tasks.indexOf(changingTask);\n        const firstPartArray = tasks.slice(0, changeIndex);\n        const secondPartArray = tasks.slice(changeIndex + 1);\n\n        this.setState({\n            tasks: [...firstPartArray, editedTask, ...secondPartArray],\n        });\n    };\n\n    removeTask = (id) => {\n        this.setState({\n            tasks: this.state.tasks.filter((task) => task.id !== id),\n        });\n    };\n\n    render() {\n        const { tasks, task } = this.state;\n        return (\n            <div id=\"app\">\n                <header>\n                    <h1>Task List</h1>\n                </header>\n                <main>\n                    <Overview\n                        tasks={tasks}\n                        removeTask={this.removeTask}\n                        onSubmitTaskEdit={this.onSubmitTaskEdit}\n                    />\n                    <form>\n                        <label htmlFor=\"taskInput\">Enter a task:</label>\n                        <input\n                            type=\"text\"\n                            id=\"taskInput\"\n                            value={task.text}\n                            onChange={this.handleChange}\n                        />\n                        <button type=\"submit\" onClick={this.onTaskSubmit}>\n                            Add Task\n                        </button>\n                    </form>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}